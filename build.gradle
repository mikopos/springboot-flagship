plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
}

allprojects {
    group = 'com.flagship'
    version = '1.0.0'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    
    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }
    
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
    
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.0"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
            mavenBom "org.testcontainers:testcontainers-bom:1.19.3"
        }
        
        dependencies {
            dependency "org.postgresql:postgresql:42.7.2"
            dependency "com.h2database:h2:2.2.224"
            dependency "org.keycloak:keycloak-spring-boot-starter:23.0.0"
            dependency "io.github.resilience4j:resilience4j-spring-boot3:2.1.0"
            dependency "io.micrometer:micrometer-registry-prometheus:1.12.0"
            dependency "org.projectlombok:lombok:1.18.42"
        }
    }
    
    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.testcontainers:junit-jupiter'
    }
    
    tasks.named('test') {
        useJUnitPlatform()
    }
    
    springBoot {
    }
    
    bootJar {
        enabled = false
    }
    
    jar {
        enabled = true
    }
}

task cleanAll {
    dependsOn subprojects.collect { "${it.path}:clean" }
    description = 'Clean all subprojects'
}

task buildAll {
    dependsOn subprojects.collect { "${it.path}:build" }
    description = 'Build all subprojects'
}

task testAll {
    dependsOn subprojects.collect { "${it.path}:test" }
    description = 'Test all subprojects'
}
