server:
  port: ${PORT:8086}
  address: 0.0.0.0


spring:
  application:
    name: ${APP_NAME:streaming-service}
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER:http://localhost:8080/realms/flagship}
          jwk-set-uri: ${JWK_URI:http://localhost:8080/realms/flagship/protocol/openid-connect/certs}
  
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: streaming-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      slo:
        http.server.requests: 50ms, 100ms, 200ms, 500ms

logging:
  level:
    com.flagship.streaming: DEBUG
    org.springframework.security: DEBUG
    org.springframework.kafka: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
